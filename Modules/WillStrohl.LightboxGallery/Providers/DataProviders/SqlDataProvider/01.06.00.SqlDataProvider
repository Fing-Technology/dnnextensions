/*

INSTALL SQL PROVIDER SCRIPT

Lightbox Gallery Module for DotNetNuke
Version: 01.06.00
Author: Will Strohl
E-Mail: will.strohl@gmail.com
Website: http://www.willstrohl.com

Copyright 2011 Will Strohl

Release Notes:
  Extending the field size for the folder names.

*/

ALTER TABLE {databaseOwner}[{objectQualifier}wns_lightbox] ALTER COLUMN [GalleryFolder] NVARCHAR(250) NULL;

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_AddLightbox]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_AddLightbox];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_AddLightbox] 
	@ModuleId INT, @GalleryName NVARCHAR(50), @GalleryDescription NVARCHAR(500), @GalleryFolder NVARCHAR(250), @DisplayOrder INT, @HideTitleDescription BIT 
AS 
BEGIN 
	SET NOCOUNT ON;
	IF NOT @DisplayOrder > 0
	BEGIN
	    SELECT @DisplayOrder = COUNT(l.[LightboxId]) FROM {databaseOwner}[{objectQualifier}wns_lightbox] l WHERE l.[ModuleId] = @ModuleId;
	    SET @DisplayOrder = @DisplayOrder + 1;
	END

	INSERT INTO {databaseOwner}[{objectQualifier}wns_lightbox] ([ModuleId],[GalleryName],[GalleryDescription],[GalleryFolder],[DisplayOrder],[HideTitleDescription]) 
	VALUES (@ModuleId, @GalleryName, @GalleryDescription, @GalleryFolder, @DisplayOrder, @HideTitleDescription);
	SELECT SCOPE_IDENTITY();
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_UpdateLightbox]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_UpdateLightbox];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_UpdateLightbox] 
	@LightboxId INT, @ModuleId INT, @GalleryName NVARCHAR(50), @GalleryDescription NVARCHAR(500), @GalleryFolder NVARCHAR(250), @DisplayOrder INT, @HideTitleDescription BIT 
AS 
BEGIN 
	SET NOCOUNT ON;
	IF NOT @DisplayOrder > 0
	BEGIN
	    SELECT @DisplayOrder = COUNT(l.[LightboxId]) FROM {databaseOwner}[{objectQualifier}wns_lightbox] l WHERE l.[ModuleId] = @ModuleId;
	    SET @DisplayOrder = @DisplayOrder + 1;
	END

	UPDATE {databaseOwner}[{objectQualifier}wns_lightbox] 
	SET [ModuleId] = @ModuleId,
		[GalleryName] = @GalleryName, 
		[GalleryDescription] = @GalleryDescription, 
		[GalleryFolder] = @GalleryFolder, 
		[DisplayOrder] = @DisplayOrder, 
		[HideTitleDescription] = @HideTitleDescription 
	WHERE [LightboxId] = @LightboxId;
END
GO

IF NOT OBJECT_ID('{databaseOwner}[{objectQualifier}wns_lightbox_image]') IS NULL
	DROP TABLE {databaseOwner}[{objectQualifier}wns_lightbox_image];
GO

CREATE TABLE {databaseOwner}[{objectQualifier}wns_lightbox_image] (
	[ImageId] INT IDENTITY(1,1) NOT NULL 
	    CONSTRAINT [PK_{objectQualifier}wns_lightbox_image] PRIMARY KEY CLUSTERED, 
	[LightboxId] INT NOT NULL 
	    CONSTRAINT [FK_{objectQualifier}wns_lightbox_image_LightboxId] FOREIGN KEY 
	    REFERENCES {databaseOwner}[{objectQualifier}wns_lightbox] ([LightboxId]) ON DELETE CASCADE, 
	[FileName] NVARCHAR(250) NOT NULL, 
	[Title] NVARCHAR(50) NULL, 
	[Description] NVARCHAR(500) NULL, 
	[DisplayOrder] INT NULL 
);

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_AddImage]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_AddImage];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_AddImage] 
	@LightboxId INT, @FileName NVARCHAR(250), @Title NVARCHAR(50), @Description NVARCHAR(500), @DisplayOrder INT 
AS 
BEGIN 
	SET NOCOUNT ON;

	IF NOT @DisplayOrder > 0
	BEGIN
	    SELECT @DisplayOrder = COUNT(i.[ImageId]) FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] i WHERE i.[LightboxId] = @LightboxId;
	    SET @DisplayOrder = @DisplayOrder + 1;
	END

	INSERT INTO {databaseOwner}[{objectQualifier}wns_lightbox_image] ([LightboxId],[FileName],[Title],[Description],[DisplayOrder]) 
	VALUES (@LightboxId, @FileName, @Title, @Description, @DisplayOrder);
	SELECT SCOPE_IDENTITY();
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_UpdateImage]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_UpdateImage];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_UpdateImage] 
	@ImageId INT, @LightboxId INT, @FileName NVARCHAR(250), @Title NVARCHAR(50), @Description NVARCHAR(500), @DisplayOrder INT 
AS 
BEGIN 
	SET NOCOUNT ON;
	IF NOT @DisplayOrder > 0
	BEGIN
	    SELECT @DisplayOrder = COUNT(i.[ImageId]) FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] i WHERE i.[LightboxId] = @LightboxId;
	    SET @DisplayOrder = @DisplayOrder + 1;
	END

	UPDATE {databaseOwner}[{objectQualifier}wns_lightbox_image] 
	SET [LightboxId] = @LightboxId,
		[FileName] = @FileName,
		[Title] = @Title, 
		[Description] = @Description, 
		[DisplayOrder] = @DisplayOrder 
	WHERE [ImageId] = @ImageId;
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_DeleteImageById]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_DeleteImageById];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_DeleteImageById] 
	@ImageId INT
AS 
BEGIN 
	SET NOCOUNT ON;

	DELETE FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] 
	WHERE [ImageId] = @ImageId;
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_DeleteImageByFileName]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_DeleteImageByFileName];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_DeleteImageByFileName] 
	@LightboxId INT, @FileName NVARCHAR(250) 
AS 
BEGIN 
	SET NOCOUNT ON;

	DELETE FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] 
	WHERE [LightboxId] = @LightboxId AND [FileName] = @FileName;
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_GetImages]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImages];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImages] 
	@LightboxId INT 
AS 
BEGIN 
	SET NOCOUNT ON;

	SELECT i.[ImageId],i.[LightboxId],i.[FileName],i.[Title],i.[Description],i.[DisplayOrder]
	FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] i 
	WHERE i.[LightboxId] = @LightboxId 
	ORDER BY i.[DisplayOrder], i.[FileName];
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_GetImageById]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImageById];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImageById] 
	@ImageId INT 
AS 
BEGIN 
	SET NOCOUNT ON;

	SELECT i.[ImageId],i.[LightboxId],i.[FileName],i.[Title],i.[Description],i.[DisplayOrder]
	FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] i 
	WHERE i.[ImageId] = @ImageId;
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_GetImageByFileName]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImageByFileName];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImageByFileName] 
	@LightboxId INT, @FileName NVARCHAR(250) 
AS 
BEGIN 
	SET NOCOUNT ON;

	SELECT i.[ImageId],i.[LightboxId],i.[FileName],i.[Title],i.[Description],i.[DisplayOrder]
	FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] i 
	WHERE i.[LightboxId] = @LightboxId AND i.[FileName] = @FileName;
END
GO

IF NOT OBJECT_ID(N'{databaseOwner}[{objectQualifier}wns_lightbox_GetImageCount]') IS NULL
	DROP PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImageCount];
GO

SET QUOTED_IDENTIFIER ON;
GO
SET ANSI_NULLS ON;
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}wns_lightbox_GetImageCount] 
	@LightboxId INT 
AS 
BEGIN 
	SET NOCOUNT ON;

	SELECT COUNT(i.[ImageId]) 
	FROM {databaseOwner}[{objectQualifier}wns_lightbox_image] i 
	WHERE i.[LightboxId] = @LightboxId;
END
GO

/* END OF FILE */